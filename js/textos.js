// M√≥dulo de Textos Din√¢micos
const TEXTOS = {
    manifesto: {
        heroTitle: "O dinheiro n√£o √© o problema. √â a ferramenta que vamos usar para quebrar o sistema.",
        heroSubtitle: "Nascemos da necessidade, sobrevivemos pela intelig√™ncia e vamos prosperar pela determina√ß√£o. Isto n√£o √© uma caridade. √â um neg√≥cio com alma.",
        impactQuote: "N√≥s n√£o queremos sua pena. Queremos parceiros que entendam que, para construir um mundo melhor, primeiro voc√™ precisa dominar as regras do mundo real."
    },

    roteiro: {
        intro: "Toda grande hist√≥ria tem um roteiro. Este √© o nosso. Cada fase √© um investimento, financiado pelo nosso pr√≥prio trabalho. O progresso √© real e vis√≠vel. √â aqui que cada centavo √© aplicado.",
        fases: [
            {
                id: 'vendas',
                icon: 'üìà',
                titulo: 'Fase 1: Dom√≠nio de Vendas',
                descricao: 'Validar o modelo em larga escala, otimizando a log√≠stica e o treinamento da equipe. A base de tudo.',
                progresso: 75,
                status: 'em-andamento'
            },
            {
                id: 'terreno',
                icon: 'üèóÔ∏è',
                titulo: 'Fase 2: O Terreno',
                descricao: 'Aquisi√ß√£o da nossa terra. Onde nossa base ser√° erguida. O marco zero da nossa independ√™ncia.',
                progresso: 10,
                status: 'iniciado'
            },
            {
                id: 'casa',
                icon: 'üè†',
                titulo: 'Fase 3: A Casa-Fortaleza',
                descricao: 'Construir a moradia digna para nossa equipe. Um lugar seguro e de alto padr√£o. Quem constr√≥i o imp√©rio, vive nele.',
                progresso: 2,
                status: 'planejado'
            },
            {
                id: 'abrigo',
                icon: 'üêæ',
                titulo: 'Fase 4: Abrigo Animal',
                descricao: 'Financiado 100% pelo lucro, ser√° o santu√°rio para os que n√£o t√™m voz. Um projeto paralelo com a mesma seriedade.',
                progresso: 0,
                status: 'futuro'
            }
        ]
    },

    saida: {
        intro: "Este √© um chamado. N√£o uma oferta de emprego. √â um convite para quem cansou do jogo e quer come√ßar a construir o seu.",
        sistemaJogo: [
            "Sal√°rio m√≠nimo que mal paga as contas.",
            "Viver para trabalhar, sem nunca prosperar.",
            "Ser julgado pela sua apar√™ncia, n√£o pela sua for√ßa.",
            "Sentir que seu potencial est√° sendo desperdi√ßado.",
            "Achar que a rua √© o fim da linha."
        ],
        nossoJogo: [
            "Ganhos baseados no seu esfor√ßo e determina√ß√£o.",
            "Trabalhar para construir algo seu, n√£o para os outros.",
            "Ser valorizado pela sua lealdade e vontade de vencer.",
            "Aprender a gerar dinheiro e criar oportunidades.",
            "Entender que a rua foi s√≥ o come√ßo."
        ],
        conclusao: "Se voc√™ se identifica com o nosso jogo e n√£o tem medo de trabalhar duro, talvez seu lugar seja aqui. N√≥s n√£o damos o peixe. N√≥s ensinamos a construir o barco, a rede e a vender para o restaurante mais caro da cidade."
    },

    conexao: {
        intro: "Procuramos aliados, n√£o seguidores. Investidores com vis√£o, parceiros de neg√≥cio e pessoas que queiram construir junto. Se a nossa determina√ß√£o ressoa com a sua, entre em contato."
    },

    footer: {
        description: "N√≥s n√£o resgatamos. N√≥s constru√≠mos. Um imp√©rio para quem foi esquecido.",
        mission: "DETERMINA√á√ÉO. √â a nossa moeda. √â o nosso combust√≠vel. √â tudo o que temos e tudo o que precisamos."
    },

    splash: {
        message: "Construindo um imp√©rio... na ra√ßa."
    }
};

// Fun√ß√£o para carregar textos na p√°gina
function carregarTextos() {
    // Manifesto
    const heroTitle = document.getElementById('hero-title');
    const heroSubtitle = document.getElementById('hero-subtitle');
    const impactQuote = document.getElementById('impact-quote');
    
    if (heroTitle) heroTitle.textContent = TEXTOS.manifesto.heroTitle;
    if (heroSubtitle) heroSubtitle.textContent = TEXTOS.manifesto.heroSubtitle;
    if (impactQuote) impactQuote.textContent = TEXTOS.manifesto.impactQuote;

    // Roteiro
    const roteiroIntro = document.getElementById('roteiro-intro');
    if (roteiroIntro) roteiroIntro.textContent = TEXTOS.roteiro.intro;

    // Sa√≠da
    const saidaIntro = document.getElementById('saida-intro');
    if (saidaIntro) saidaIntro.textContent = TEXTOS.saida.intro;

    // Conex√£o
    const conexaoIntro = document.getElementById('conexao-intro');
    if (conexaoIntro) conexaoIntro.textContent = TEXTOS.conexao.intro;

    // Footer
    const footerDescription = document.getElementById('footer-description');
    const footerMission = document.getElementById('footer-mission');
    
    if (footerDescription) footerDescription.textContent = TEXTOS.footer.description;
    if (footerMission) footerMission.textContent = TEXTOS.footer.mission;

    // Carregar fases do roteiro
    carregarFasesRoteiro();
    
    // Carregar se√ß√£o de sa√≠da
    carregarSecaoSaida();
}

function carregarFasesRoteiro() {
    const roteiroGrid = document.getElementById('roteiro-grid');
    if (!roteiroGrid) return;

    roteiroGrid.innerHTML = '';

    TEXTOS.roteiro.fases.forEach(fase => {
        const faseElement = document.createElement('div');
        faseElement.className = 'action-card';
        faseElement.innerHTML = `
            <div class="action-icon">${fase.icon}</div>
            <h3>${fase.titulo}</h3>
            <p>${fase.descricao}</p>
            <div class="progress-container">
                <div class="progress-bar" style="width: ${fase.progresso}%;"></div>
            </div>
            <span class="progress-text">${fase.progresso}% Conclu√≠do</span>
        `;
        roteiroGrid.appendChild(faseElement);
    });
}

function carregarSecaoSaida() {
    const exitContainer = document.getElementById('exit-container');
    if (!exitContainer) return;

    exitContainer.innerHTML = `
        <div class="exit-column">
            <h3>O Jogo do Sistema</h3>
            <ul>
                ${TEXTOS.saida.sistemaJogo.map(item => `<li>${item}</li>`).join('')}
            </ul>
        </div>
        <div class="exit-column">
            <h3>O Nosso Jogo</h3>
            <ul>
                ${TEXTOS.saida.nossoJogo.map(item => `<li>${item}</li>`).join('')}
            </ul>
        </div>
    `;

    // Adicionar conclus√£o
    const conclusao = document.createElement('p');
    conclusao.className = 'page-intro';
    conclusao.style.marginTop = '3rem';
    conclusao.textContent = TEXTOS.saida.conclusao;
    exitContainer.parentNode.insertBefore(conclusao, exitContainer.nextSibling);
}

// Fun√ß√£o para atualizar texto espec√≠fico
function atualizarTexto(secao, chave, novoTexto) {
    if (TEXTOS[secao] && TEXTOS[secao][chave]) {
        TEXTOS[secao][chave] = novoTexto;
        carregarTextos(); // Recarregar textos
        return true;
    }
    return false;
}

// Fun√ß√£o para obter texto
function obterTexto(secao, chave) {
    return TEXTOS[secao] && TEXTOS[secao][chave] ? TEXTOS[secao][chave] : null;
}

// Exportar fun√ß√µes
window.TEXTOS = TEXTOS;
window.carregarTextos = carregarTextos;
window.atualizarTexto = atualizarTexto;
window.obterTexto = obterTexto;